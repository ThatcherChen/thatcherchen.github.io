[{"title":"Tarjan算法：强连通图判断的高效算法[施工中...]","url":"/2023/05/17/tarjan-algo/","categories":["Algorithm"]},{"title":"Github多个帐号的ssh配置方法[施工中...]","url":"/2023/05/17/ssh-multikey/","categories":["Tech"]},{"title":"时空索引技术前沿分享[施工中...]","url":"/2023/05/16/spatial-temporal-index/","content":"\n随着移动定位技术的发展，越来越多的设备开始搭载GPS定位模块。这些可定位设备在城市中产生了大量的时空数据，而这些数据在先进的时空数据处理框架下能够发挥重要的作用，例如：城市交通感知、疫情时空交集检测、个性化服务推送等等。那么这些数据又是如何被时空数据库或者处理框架索引的呢？请看下文。\n\n# 前言\n\n常见的时空索引方法包括：\n- 二叉空间分区（BSP-Tree）\n- 边界体积层次结构（Bounding volume hierarchy）\n- 地理哈希（GeoHash）\n- 网格索引（Grid spatial index）\n- 螺旋超时空代码（Helical Hyperspatial Code, HHCode）\n- 希尔伯特R树（Hilbert R-tree）\n- kd树（kd-tree）\n- m树（m-tree）\n- 四叉树（Quadtree）\n- R树（R-tree）\n- Z阶曲线（Z-ordering Curve）\n- 等等......\n\n这些索引方法通过提取时空数据的空间或者时间信息并进行编码，实现了时空数据的结构化编排，为时空数据的高效查询、处理打下了基石。\n\n由于时空索引方法非常多，本文无法一一列举分析，所以本文将聚焦于笔者目前正在研究学习的时空索引技术。\n\n# Z-ordering Curve\n\n![](/img/st-index/z-ordering.svg)\n\n*Z-ordering Curve*是一种**空间填充曲线**，通过将GPS点的经、纬度的二进制数值进行交叉编码，实现了从二维数据到一维数据的映射，从而完成对二维数据的索引。\n\n为了更形象地展示Z-ordering Curve，以下是一个关于使用Z-ordering Curve索引点数据的例子。\n\n![](/img/st-index/z-curve-example.svg)\n\n如图，x的范围是\n\n# XZ Index\n\n# XZ2 Index\n\n# XZ2T Index\n\n# XZ3 Index\n\n# XZ* Index\n\n## PosCode\n\n## Enlarged Element\n","categories":["Research"]},{"title":"NOTICE","url":"/2023/05/16/notice/","content":"\n# 通知\n\n目前正在重启旧有博客，原博客“望海之洲”的归档内容正在迁移到新博客，并且新博客会持续推送之后的笔者之后的技术栈分享，敬请期待。\n\n","tags":["misc"],"categories":["Announcement"]}]